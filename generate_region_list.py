import requests
import re
import datetime

def fetch_and_process_regions(custom_regions=None):
    """
    Fetches region data from the Oracle Cloud Infrastructure TypeScript SDK,
    processes it, and writes it to a TypeScript file.

    Args:
        custom_regions (list, optional): A list of custom regions to include. Defaults to None.
    Usage:
        python generate_region_list.py
    Warnings:
        This script will overwrite the content of ./src/regionlist.ts
    """
    url = "https://raw.githubusercontent.com/oracle/oci-typescript-sdk/refs/heads/master/lib/common/lib/region.ts"
    response = requests.get(url)
    file_content = response.text

    matches = re.findall(r'Region\.register\("([^"]+)"', file_content)
    unique_sorted_matches = sorted(set(matches))

    if custom_regions:
        unique_sorted_matches.extend(custom_regions)
        unique_sorted_matches = sorted(set(unique_sorted_matches))

    # Format regions with each on its own line
    formatted_regions = ',\n  '.join([f"'{region}'" for region in unique_sorted_matches])
    regions = f"export const regions = [\n  {formatted_regions}\n]"

    current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    comment = (
        "// This file is automatically generated from the Oracle Cloud Infrastructure TypeScript SDK.\n"
        f"// Source URL: {url}\n"
        "// Generated by script: generate_region_list.py (located in the repository root)\n"
        "// DO NOT EDIT MANUALLY. Use the generation script instead.\n"
        f"// Last updated: {current_time}\n"
    )

    with open('./src/regionlist.ts', 'w') as file:
        file.write(comment + regions)

    print("Result successfully written to './src/regionlist.ts'")

fetch_and_process_regions()
