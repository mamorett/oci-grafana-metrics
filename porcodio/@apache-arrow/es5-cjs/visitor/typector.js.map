{"version":3,"sources":["visitor/typector.ts"],"names":[],"mappings":"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","file":"typector.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport * as type from '../type';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { DataTypeCtor } from '../interfaces';\n\n/** @ignore */\nexport interface GetDataTypeConstructor extends Visitor {\n    visit<T extends Type>(node: T): DataTypeCtor<T>;\n    visitMany<T extends Type>(nodes: T[]): DataTypeCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => DataTypeCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): () => DataTypeCtor<T>;\n}\n\n/** @ignore */\nexport class GetDataTypeConstructor extends Visitor {\n    public visitNull                 () { return type.Null; }\n    public visitBool                 () { return type.Bool; }\n    public visitInt                  () { return type.Int; }\n    public visitInt8                 () { return type.Int8; }\n    public visitInt16                () { return type.Int16; }\n    public visitInt32                () { return type.Int32; }\n    public visitInt64                () { return type.Int64; }\n    public visitUint8                () { return type.Uint8; }\n    public visitUint16               () { return type.Uint16; }\n    public visitUint32               () { return type.Uint32; }\n    public visitUint64               () { return type.Uint64; }\n    public visitFloat                () { return type.Float; }\n    public visitFloat16              () { return type.Float16; }\n    public visitFloat32              () { return type.Float32; }\n    public visitFloat64              () { return type.Float64; }\n    public visitUtf8                 () { return type.Utf8; }\n    public visitBinary               () { return type.Binary; }\n    public visitFixedSizeBinary      () { return type.FixedSizeBinary; }\n    public visitDate                 () { return type.Date_; }\n    public visitDateDay              () { return type.DateDay; }\n    public visitDateMillisecond      () { return type.DateMillisecond; }\n    public visitTimestamp            () { return type.Timestamp; }\n    public visitTimestampSecond      () { return type.TimestampSecond; }\n    public visitTimestampMillisecond () { return type.TimestampMillisecond; }\n    public visitTimestampMicrosecond () { return type.TimestampMicrosecond; }\n    public visitTimestampNanosecond  () { return type.TimestampNanosecond; }\n    public visitTime                 () { return type.Time; }\n    public visitTimeSecond           () { return type.TimeSecond; }\n    public visitTimeMillisecond      () { return type.TimeMillisecond; }\n    public visitTimeMicrosecond      () { return type.TimeMicrosecond; }\n    public visitTimeNanosecond       () { return type.TimeNanosecond; }\n    public visitDecimal              () { return type.Decimal; }\n    public visitList                 () { return type.List; }\n    public visitStruct               () { return type.Struct; }\n    public visitUnion                () { return type.Union; }\n    public visitDenseUnion           () { return type.DenseUnion; }\n    public visitSparseUnion          () { return type.SparseUnion; }\n    public visitDictionary           () { return type.Dictionary; }\n    public visitInterval             () { return type.Interval; }\n    public visitIntervalDayTime      () { return type.IntervalDayTime; }\n    public visitIntervalYearMonth    () { return type.IntervalYearMonth; }\n    public visitFixedSizeList        () { return type.FixedSizeList; }\n    public visitMap                  () { return type.Map_; }\n}\n\n/** @ignore */\nexport const instance = new GetDataTypeConstructor();\n"]}