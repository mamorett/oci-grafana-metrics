{"version":3,"sources":["visitor/jsontypeassembler.ts"],"names":[],"mappings":"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","file":"jsontypeassembler.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { Type as ArrowType } from '../fb/Schema';\nimport { Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): Record<string, unknown> | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): Record<string, unknown> | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n"]}