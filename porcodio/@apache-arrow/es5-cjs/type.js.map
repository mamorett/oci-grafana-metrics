{"version":3,"sources":["type.ts"],"names":[],"mappings":"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","file":"type.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { VectorType as V } from './interfaces';\nimport { TypedArrayConstructor } from './interfaces';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue'] }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array> }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T> }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array> }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() {\n return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`;\n}\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T> }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey; value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey; value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey; value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue'] }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    const t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n"]}