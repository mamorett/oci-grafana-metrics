{"version":3,"sources":["io/node/writer.ts"],"names":[],"mappings":"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","file":"writer.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Duplex, DuplexOptions } from 'stream';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughNodeStream<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, options?: DuplexOptions & { autoDestroy: boolean }) {\n    return new RecordBatchWriterDuplex(new this<T>(options));\n}\n\n/** @ignore */\ntype CB = (error?: Error | null | undefined) => void;\n\n/** @ignore */\nclass RecordBatchWriterDuplex<T extends { [key: string]: DataType } = any> extends Duplex {\n    private _pulling = false;\n    private _reader: AsyncByteStream | null;\n    private _writer: RecordBatchWriter | null;\n    constructor(writer: RecordBatchWriter<T>, options?: DuplexOptions) {\n        super({ allowHalfOpen: false, ...options, writableObjectMode: true, readableObjectMode: false });\n        this._writer = writer;\n        this._reader = new AsyncByteStream(writer);\n    }\n    _final(cb?: CB) {\n        const writer = this._writer;\n        writer && writer.close();\n        cb && cb();\n    }\n    _write(x: any, _: string, cb: CB) {\n        const writer = this._writer;\n        writer && writer.write(x);\n        cb && cb();\n        return true;\n    }\n    _read(size: number) {\n        const it = this._reader;\n        if (it && !this._pulling && (this._pulling = true)) {\n            (async () => this._pulling = await this._pull(size, it))();\n        }\n    }\n    _destroy(err: Error | null, cb: (error: Error | null) => void) {\n        const writer = this._writer;\n        if (writer) { err ? writer.abort(err) : writer.close(); }\n        cb(this._reader = this._writer = null);\n    }\n    async _pull(size: number, reader: AsyncByteStream) {\n        let r: IteratorResult<Uint8Array> | null = null;\n        while (this.readable && !(r = await reader.next(size || null)).done) {\n            if (size != null && r.value) {\n                size -= r.value.byteLength;\n            }\n            if (!this.push(r.value) || size <= 0) { break; }\n        }\n        if ((r && r.done || !this.readable)) {\n            this.push(null);\n            await reader.cancel();\n        }\n        return !this.readable;\n    }\n}\n"]}